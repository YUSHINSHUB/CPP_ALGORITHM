/*
Commented by ChatGPT
Summary: This program generates the Cantor set pattern (fractal) up to iteration 12, and prints the pattern corresponding to the iteration number entered by the user.
The Cantor set pattern is generated by iteratively splitting each segment into three equal parts and removing the middle part.
*/

#include <iostream>
#include <string>
using namespace std;

int main()
{
	string cnt[13]; // Initialize an array of string to hold the patterns for
	// each iteration

	fill(cnt, cnt + 13, "");

	cnt[0].append("-"); // The base pattern

	for (int i = 1; i <= 12; i++) { // Generate the pattern for iterations 1 to 12
		int bl = cnt[i - 1].length(); // Get the length of the previous iteration's pattern
		for (int j = 0; j < bl; j++) {
			cnt[i] += (cnt[i - 1][j]); // Copy the previous pattern
		}
		for (int j = 0; j < bl; j++) {
			cnt[i].append(" "); // Add a space for the removed middle part
		}
		for (int j = 0; j < bl; j++) {
			cnt[i] += (cnt[i - 1][j]); // Copy the previous pattern again
		}
	}

	string inp = "";
	while (getline(cin, inp)) { // Read the iteration number from the user
		cout << cnt[stoi(inp)] << "\n"; // Print the pattern corresponding to the entered iteration
	}

}